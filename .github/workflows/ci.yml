name: CI
on: [push, pull_request]

permissions:
  actions: write
  checks: write
  contents: write
  deployments: write
  id-token: write
  issues: write
  discussions: write
  packages: write
  pages: write
  pull-requests: write
  repository-projects: write
  security-events: write
  statuses: write

jobs:
  linter:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        path: lilia

    - uses: leafo/gh-actions-lua@v8.0.0
      with:
        luaVersion: "5.2"

    - uses: leafo/gh-actions-luarocks@v4.0.0

    - name: Pull gluacheck
      uses: actions/checkout@v2
      with:
        repository: LiliaFramework/GluaCheck
        path: luacheck

    - name: Build gluacheck
      working-directory: luacheck
      run: luarocks make

    - name: Lint
      working-directory: lilia
      run: luacheck . --no-redefined
          --no-global --no-self
          --no-max-line-length --no-max-code-line-length
          --no-max-string-line-length --no-max-comment-line-length
          --no-max-cyclomatic-complexity

  docs:
    runs-on: ubuntu-latest
    needs: linter
    steps:
      - uses: actions/checkout@v2
        with:
          path: scprp

      - uses: leafo/gh-actions-lua@v8.0.0
        with:
          luaVersion: "5.2"

      - uses: leafo/gh-actions-luarocks@v4.0.0

      - name: Pull LDoc
        uses: actions/checkout@v2
        with:
          repository: LiliaFramework/LDoc
          path: ldoc

      - name: Build LDoc
        working-directory: ldoc
        run: luarocks make

      - name: Build docs
        working-directory: scprp
        run: ldoc . --fatalwarnings 

      - name: Copy assets
        working-directory: scprp
        run: |
          cp -v docs/css/* docs/html
          cp -v docs/js/* docs/html

      - name: Deploy
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && github.repository == 'LiliaFramework/SCPRP' && success()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: scprp/docs/html

  release:
    runs-on: ubuntu-latest
    needs: docs
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && github.repository == 'LiliaFramework/SCPRP' && success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          path: scprp

      - name: Compress scprp folder
        run: |
          mkdir release
          cp -r scprp release/
          cd release
          zip -r scprp.zip scprp
          cd ..

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            Automatically generated release from commit ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/scprp.zip
          asset_name: scprp.zip
          asset_content_type: application/zip
